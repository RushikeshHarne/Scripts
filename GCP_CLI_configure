#!/bin/bash

set -e

# ---------- Detect OS ----------
echo "🔍 Detecting operating system..."

OS="$(uname -s)"
case "$OS" in
    Linux*)
        if [ -f /etc/os-release ]; then
            . /etc/os-release
            DISTRO=$ID
        fi
        ;;
    Darwin*)
        DISTRO="macos"
        ;;
    MINGW* | MSYS* | CYGWIN*)
        echo "❌ Please run this script inside WSL or Git Bash. Exiting."
        exit 1
        ;;
    *)
        echo "❌ Unsupported OS: $OS"
        exit 1
        ;;
esac

echo "✅ OS Detected: $DISTRO"

# ---------- Install Google Cloud SDK ----------
echo "📦 Installing Google Cloud SDK silently..."

if [[ "$DISTRO" == "ubuntu" || "$DISTRO" == "debian" ]]; then
    sudo apt-get update -qq > /dev/null 2>&1
    sudo apt-get install -qq -y apt-transport-https ca-certificates gnupg curl lsb-release > /dev/null 2>&1
    echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | \
        sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list > /dev/null
    curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
        sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg > /dev/null 2>&1
    sudo apt-get update -qq > /dev/null 2>&1
    sudo apt-get install -qq -y google-cloud-sdk > /dev/null 2>&1

elif [[ "$DISTRO" == "rhel" || "$DISTRO" == "centos" || "$DISTRO" == "fedora" ]]; then
    sudo tee /etc/yum.repos.d/google-cloud-sdk.repo > /dev/null <<EOF
[google-cloud-sdk]
name=Google Cloud SDK
baseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
       https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF
    sudo yum install -y google-cloud-sdk > /dev/null 2>&1

elif [[ "$DISTRO" == "macos" ]]; then
    if ! command -v brew >/dev/null 2>&1; then
        echo "🍺 Installing Homebrew silently..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" </dev/null > /dev/null 2>&1
    fi
    brew install --quiet google-cloud-sdk > /dev/null 2>&1
fi

# ---------- Install Terraform ----------
echo "🔧 Installing Terraform silently..."

if [[ "$DISTRO" == "ubuntu" || "$DISTRO" == "debian" ]]; then
    sudo apt-get install -qq -y gnupg software-properties-common curl unzip > /dev/null 2>&1
    curl -fsSL https://apt.releases.hashicorp.com/gpg | \
        sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null 2>&1
    echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
        sudo tee /etc/apt/sources.list.d/hashicorp.list > /dev/null
    sudo apt-get update -qq > /dev/null 2>&1
    sudo apt-get install -qq -y terraform > /dev/null 2>&1

elif [[ "$DISTRO" == "rhel" || "$DISTRO" == "centos" || "$DISTRO" == "fedora" ]]; then
    sudo yum install -y yum-utils curl unzip > /dev/null 2>&1
    sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo > /dev/null 2>&1
    sudo yum -y install terraform > /dev/null 2>&1

elif [[ "$DISTRO" == "macos" ]]; then
    brew install --quiet terraform > /dev/null 2>&1
fi

# ---------- Authenticate with Google Cloud ----------
echo ""
echo "🔐 Authentication options:"
echo "1) Service Account File"
echo "2) Browser Login"
read -p "Enter your choice (1 or 2): " auth_choice

if [[ "$auth_choice" == "1" ]]; then
    read -p "📁 Enter full path to service account JSON: " cred_path
    if [[ ! -f "$cred_path" ]]; then
        echo "❌ File not found: $cred_path"
        exit 1
    fi
    gcloud auth activate-service-account --key-file="$cred_path" --quiet
    gcloud auth application-default login --quiet

elif [[ "$auth_choice" == "2" ]]; then
    gcloud auth login --quiet
    gcloud auth application-default login --quiet
else
    echo "❌ Invalid choice. Exiting."
    exit 1
fi

# ---------- Set project and region ----------
read -p "🎯 Enter your GCP Project ID: " gcp_project
read -p "🌍 Enter your GCP region (e.g., us-central1): " gcp_region

gcloud config set project "$gcp_project" --quiet
gcloud config set compute/region "$gcp_region" --quiet

echo ""
echo "✅ All tools installed and configured silently!"
